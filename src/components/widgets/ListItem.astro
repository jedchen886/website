---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Features as Props } from '~/types';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

const { 
    toptitle = await Astro.slots.render('title'),
    subtitle = await Astro.slots.render('subtitle'),
    tagline = await Astro.slots.render('tagline'),
    links = [], 
    theme = 'light',

    id,
    isDark = false,
    classes = {},
    bg = await Astro.slots.render('bg'),
    } = Astro.props;
---
  <!-- 
<WidgetWrapper
  id={id}
  isDark={isDark}
  containerClass={`${classes?.container ?? ''}`}
  bg={bg}
>

  <Headline title={toptitle} subtitle={subtitle} tagline={tagline} classes={classes?.headline as Record<string, string>} />
 -->
    <div class="grid grid-cols-12 gap-4 gap-y-8 sm:gap-8 py-8 md:py-12">
      {
        links.map(({ title, links }) => (
          <div class="col-span-6 md:col-span-3 lg:col-span-2">
            <div class="text-blue-500 font-medium mb-2">{title}</div>
            {links && Array.isArray(links) && links.length > 0 && (
              <ul class="text-sm">
                {links.map(({ text, href, ariaLabel }) => (
                  <li class="mb-2">
                    <a
                      class="text-muted hover:text-gray-700 hover:underline dark:text-gray-400 transition duration-150 ease-in-out"
                      href={href}
                      aria-label={ariaLabel}
                    >
                      <Fragment set:html={text} />
                    </a>
                  </li>
                ))}
              </ul>
            )}
          </div>
        ))
      }
    </div>
// </WidgetWrapper>