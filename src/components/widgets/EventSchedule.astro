---
// src/components/EventSchedule.astro
import Container from "~/components/widgets/Container.astro";

import { Icon } from 'astro-icon/components'
import speakers from '~/data/db/gosim-speakers.json';
import sponsors from '~/data/db/gosim-sponsors.json';

const { schedule } = Astro.props;

const formatDate = (dateString) => {
  const date = new Date(dateString);
  return date.toLocaleDateString('en-US', { 
    weekday: 'long', 
    month: 'long', 
    day: 'numeric', 
    year: 'numeric' 
  });
};

const getSpeaker = (id) => speakers.speakers.find(speaker => speaker.id === id);
const getSponsor = (id) => sponsors.sponsors.find(sponsor => sponsor.id === id);
---

<Container>
  <div class="mt-24">
    <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight text-center">
      <span class="text-indigo-600">Event Schedule</span>
    </h2>
    <p class="text-lg mt-4 text-slate-600 text-center">
      Organized with precision and care
    </p>
  </div>
</Container>

<div class="mt-10 relative overflow-x-clip">
  <div class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-indigo-100 right-1/3 -top-10"></div>
  <div class="absolute w-96 h-96 blur-2xl -z-10 bg-gradient-radial from-purple-100 right-1/3 translate-x-2/3 top-10"></div>

  <div class="mx-auto max-w-screen-xl px-4 py-8 sm:py-16 lg:px-6 lg:py-24">
    {Array.isArray(schedule) && schedule.map(day => (
      <div class="mb-20" key={day.date}>
        <div class="mx-auto max-w-3xl space-y-4 text-center">
          <h2 class="text-4xl font-extrabold leading-tight tracking-tight text-gray-900 dark:text-white">
            {formatDate(day.date).split(',')[0]}
          </h2>
          <p class="text-xl font-medium leading-tight text-gray-500 dark:text-gray-400">
            {formatDate(day.date).split(', ')[1]}
          </p>
          <div class="inline-flex items-center gap-2 bg-indigo-100 text-indigo-800 text-sm font-medium px-4 py-2 rounded-lg dark:bg-indigo-900 dark:text-indigo-100">
            <Icon name="tabler:clock" class="w-4 h-4" />
            {day.timezone}
          </div>
        </div>

        <div class="mt-12 grid grid-cols-1 gap-x-16 gap-y-12 lg:mt-16 lg:grid-cols-2">
          {['Morning', 'Afternoon'].map(session => (
            <div class="space-y-8" key={session}>
              <h3 class="text-center text-2xl font-bold text-gray-900 dark:text-white">{session}</h3>
              <div class="border-l-2 border-gray-200 dark:border-gray-700 space-y-8">
                {day[session.toLowerCase()].map((event, index) => (
                  <article class="relative pl-6 ml-4" key={`${session}-${index}`}>
                    <div class="absolute w-3 h-3 bg-indigo-600 rounded-full -left-[7px] top-5"></div>
                    <time class="block mb-2 text-sm font-medium text-indigo-600 dark:text-indigo-400">
                      {event.time}
                    </time>
                    <div class="p-6 bg-white border border-gray-200 rounded-xl shadow-sm dark:bg-gray-800 dark:border-gray-700">
                      <h4 class="text-xl font-semibold text-gray-900 dark:text-white mb-3">
                        {event.title}
                      </h4>
                      {event.description && (
                        <p class="text-gray-500 dark:text-gray-400 mb-4">
                          {event.description}
                        </p>
                      )}

                      {event.speakers && (
                        <div class="space-y-4">
                          {event.speakers.map(speakerId => {
                            const speaker = getSpeaker(speakerId);
                            return (
                              <div class="flex items-center gap-4" key={speakerId}>
                                <img
                                  src={speaker.avatar}
                                  alt={speaker.name}
                                  class="w-12 h-12 rounded-full object-cover"
                                  loading="lazy"
                                />
                                <div>
                                  <p class="font-medium text-gray-900 dark:text-white">{speaker.name}</p>
                                  <p class="text-sm text-gray-500 dark:text-gray-400">{speaker.role}</p>
                                </div>
                              </div>
                            );
                          })}
                        </div>
                      )}

                      {event.sponsors && (
                        <div class="mt-4 pt-4 border-t border-gray-200 dark:border-gray-700">
                          <p class="text-sm font-medium text-gray-500 dark:text-gray-400 mb-3">
                            Sponsors:
                          </p>
                          <div class="flex flex-wrap gap-4 items-center">
                            {event.sponsors.map(sponsorId => {
                              const sponsor = getSponsor(sponsorId);
                              return (
                                <a
                                  href={sponsor.website}
                                  target="_blank"
                                  rel="noopener noreferrer"
                                  class="hover:opacity-75 transition-opacity"
                                  key={sponsorId}
                                >
                                  <img
                                    src={sponsor.logo}
                                    alt={sponsor.name}
                                    class="h-8 w-auto object-contain"
                                    loading="lazy"
                                  />
                                </a>
                              );
                            })}
                          </div>
                        </div>
                      )}
                    </div>
                  </article>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    ))}
  </div>
</div>